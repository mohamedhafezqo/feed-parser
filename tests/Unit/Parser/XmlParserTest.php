<?phpnamespace App\Test\Unit\Formatter;use App\Service\Parser\APIParser;use App\Service\Parser\XmlParser;use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;use Symfony\Contracts\HttpClient\HttpClientInterface;use Symfony\Contracts\HttpClient\ResponseInterface;class XmlParserTest extends WebTestCase{    public function testParse()    {        $response = $this->getResponseMock();        $httpClient = $this->getHttpClientMock($response);        $parser = new XmlParser($httpClient);        $response = $parser->parse('https://xml.com');        $this->assertInstanceOf(\SimpleXMLElement::class, $response);    }    protected function getResponseMock()    {        $kernel = static::bootKernel();        $xml = $kernel->getContainer()->getParameter('atom-xml-feed');        $expectedXml = file_get_contents($xml['file']);        $response = $this->createMock(ResponseInterface::class);        $response            ->expects($this->once())            ->method('getContent')            ->willReturn($expectedXml)        ;        return $response;    }    /**     * @param \PHPUnit\Framework\MockObject\MockObject $response     *     * @return \PHPUnit\Framework\MockObject\MockObject     */    public function getHttpClientMock(\PHPUnit\Framework\MockObject\MockObject $response): \PHPUnit\Framework\MockObject\MockObject    {        $httpClient = $this->createMock(HttpClientInterface::class);        $httpClient            ->expects($this->once())            ->method('request')            ->willReturn($response)        ;        return $httpClient;    }}